trigger:
- main
pr:
- "*"

variables:
  TF_VERSION: '1.7.0'
  ENV_NAME: 'dev'
  ENV_PATH: 'env/dev'
  STACK_PATH: 'stacks/vnet-dev'
  AZURE_SERVICE_CONNECTION: 'spOIDC'  # <-- your ARM service connection name

stages:
# -------- PR: Validate & Plan (dev only) ----------
- stage: Plan
  displayName: 
  jobs:
  - job: plan_dev
    displayName: "Validate & Plan (dev)"
    pool: { vmImage: 'ubuntu-latest' }
    steps:
    - checkout: self

    # Install Terraform
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: $(TF_VERSION)

    # Login to Azure with the Service Connection and expose SP vars
    - task: AzureCLI@2
      displayName: "Az login"
      inputs:
        azureSubscription: $(AZURE_SERVICE_CONNECTION)
        scriptType: bash
        scriptLocation: inlineScript
        addSpnToEnvironment: true
        inlineScript: |
          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
          echo "##vso[task.setvariable variable=ARM_USER_OIDC]true"
          echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
          echo "##vso[task.setvariable variable=ARM_OIDC_TOKEN;issecret=true]$idToken"
          SUB_ID=$(az account show --query id -o tsv)
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$SUB_ID"

    # Format + Validate
    - script: |
        terraform fmt -check -recursive
        cd $(STACK_PATH)
        terraform init -backend-config=../../$(ENV_PATH)/backend.hcl
        terraform validate
        terraform plan \
          -var-file=../../$(ENV_PATH)/terraform.tfvars \
          -out=plan_dev.tfplan
      displayName: "terraform fmt / init / validate / plan"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_USE_OIDC: $(ARM_USER_OIDC)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)

    - publish: $(STACK_PATH)/plan_dev.tfplan
      artifact: plan-dev

    - script: |
        cd $(STACK_PATH)
        terraform show -no-color plan_dev.tfplan > plan_dev.txt
      displayName: "Render plan to text"

    - publish: $(STACK_PATH)/plan_dev.txt
      artifact: plan-dev-text

# -------- MAIN: Apply to dev with approval ----------
- stage: Apply
  displayName: "Apply to dev"
  dependsOn: Plan
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: apply_dev
    environment: dev-approval      # <-- create this Environment with approvals
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: $(TF_VERSION)

          - task: AzureCLI@2
            displayName: "Az login"
            inputs:
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              inlineScript: |
                echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
                echo "##vso[task.setvariable variable=ARM_USER_OIDC]true"
                echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
                echo "##vso[task.setvariable variable=ARM_OIDC_TOKEN;issecret=true]$idToken"
                SUB_ID=$(az account show --query id -o tsv)
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$SUB_ID"
                    
          - download: current
            artifact: plan-dev

          - script: |
              cd $(STACK_PATH)
              terraform init -backend-config=../../$(ENV_PATH)/backend.hcl
              terraform apply -auto-approve $(Pipeline.Workspace)/plan-dev/plan_dev.tfplan
            displayName: "terraform apply (dev)"
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_USE_OIDC: $(ARM_USER_OIDC)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
